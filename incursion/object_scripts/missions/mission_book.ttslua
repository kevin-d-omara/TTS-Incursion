local UIx = require("incursion.tts_api.extension.UIx")


--==============================================================================
-- Global variables exposed for use in user script:
MissionBooks = require("incursion.config.missions.MissionBooks")

-- Values to be set in user script:
MISSION_BOOK = nil
EXTRA_GUIDS_TO_PRESERVE = {} -- HashSet<str>, set of GUIDs to preserve when clearing the table
--==============================================================================


local ROOT_ELEMENT_ID = "RootElementId"

function onLoad()
    local scaleMultiplier = _getScaleMultiplier(self)
    self.UI.setXmlTable({
        {
            tag="VerticalLayout",
            attributes={
                id=ROOT_ELEMENT_ID,
                active=false,

                spacing=20,
                position="0 240 -22",
                rotation="0 0 180",
                height=150*scaleMultiplier,
                width=450*scaleMultiplier,
            },
            children={
                {
                    tag="Button",
                    attributes={
                        text="Play Mission",
                        fontSize=tostring(math.floor(60*scaleMultiplier)),
                        fontStyle="Bold",
                        scale=UIx.getTextScale(self),
                        onClick="_onClick_playMission",
                    }
                }
            },
        },
    })

    Wait.frames(_updateButtonVisibility, 1)
end

function onPageChange()
    _updateButtonVisibility()
end

function _updateButtonVisibility()
    local currentPage = self.Book.getPage(true)
    local missionName = MISSION_BOOK.PageToMissionName[currentPage]

    if missionName then
        self.UI.setAttribute(ROOT_ELEMENT_ID, "active", "true")
    else
        self.UI.setAttribute(ROOT_ELEMENT_ID, "active", "false")
    end
end

function _onClick_playMission()
    local currentPage = self.Book.getPage(true)
    local missionName = MISSION_BOOK.PageToMissionName[currentPage]
    -- We have to call this on Global since Global maintains the "Singleton" config objects, which get mutated by some missions (they are hacks).
    Global.call("PlayMission", {
        missionName=missionName,
        extraGuidsToPreserve=EXTRA_GUIDS_TO_PRESERVE,
    })
end

-- The goal is to maintain crisp text, even when the object (and therefore UI) are scaled up or down.
-- The magic numbers correspond to the booklet PDF object. It might not scale properly for other UI elements.
function _getScaleMultiplier(obj)
    local scale = obj.getScale()
    local maxComponent = math.max(scale.x, scale.y, scale.z)
    return 0.3311258*maxComponent + 0.072848
end
