require("incursion.GlobalCallbacks")
local PlayerColor = require("incursion.tts_api.extension.PlayerColor")
local SaveState = require("incursion.tts_api.util.SaveState")
local Math = require("incursion.util.Math")
local MissionRunner = require("incursion.MissionRunner")


-- Configs are global vars (instead of local) so they can be mutated by other scripts.
-- Think of these like Singleton objects in C#/Java.
-- This is bad programming, we shouldn't be mutating global variables in random scripts.
ColorNameToFaction = require("incursion.config.maps.ColorNameToFaction")
FactionToSeat = require("incursion.config.maps.FactionToSeat")
PlayerSeats = require("incursion.config.PlayerSeats")
Factions = require("incursion.config.Factions")
Avatars = require("incursion.config.Avatars")
VictoryPoints = require("incursion.config.VictoryPoints")
MissionInfiniteBags = require("incursion.config.MissionInfiniteBags")
GameTable = require("incursion.GameTable")


EDITING_MODE = false


function CreateSavedState()
    local objectsToSave = {}

    for name,playerSeat in pairs(PlayerSeats) do
        local key = "PlayerSeat."..name
        objectsToSave[key]=playerSeat
    end
    for name,faction in pairs(Factions) do
        local key = "Faction."..name
        objectsToSave[key]=faction
    end

    return SaveState(objectsToSave)
end
local SavedState = CreateSavedState()

function onSave()
    return SavedState:onSave()
end

function onLoad(savedJson)
    Math.initializeRandomSeed()
    SavedState:onLoad(savedJson)
    _disableInteractivity()
    MissionRunner.BagWithAllMemoryBags:HideMe(not EDITING_MODE)
end

function _disableInteractivity()
    for _,guid in ipairs(_getGuidsOnTable()) do
        _tryFreeze(guid)
    end

    for _,guid in ipairs(_getGuidsUnderTable()) do
        _tryFreeze(guid)
    end
end

function _tryFreeze(guid)
    local obj = getObjectFromGUID(guid)
    if obj then
        obj.interactable = false
        obj.tooltip = false
    else
        log("_tryFreeze(guid): Object does not exist, will not freeze GUID: "..tostring(guid))
    end
end

function _getGuidsOnTable()
    local guidsToFreeze = {
        'c8b15c', -- Avatar: Slugger Murphy
        'da43c3', -- Avatar: Gretel
        'a13d1f', -- Table
        '27fa45', -- Left Table Sleeve
        '3161c7', -- Left Table Sleeve Divider
        '2b1761', -- Right Table Sleeve
        'fb5e0f', -- Right Table Sleeve Divider
    }

    for _,playerSeat in pairs(PlayerSeats) do
        for guid,_ in ipairs(playerSeat.ScriptingZones.ModelCards.GuidsToPreserve) do
            table.insert(guidsToFreeze, guid)
        end
    end

    return guidsToFreeze
end

function _getGuidsUnderTable()
    local guidsToFreeze = {
        'fc34bd', -- Memory Bag for Intro Mission
        'd3cde6', -- Battle Card Deck
        '4af2c2', -- Deck: Zombie Country
        'ad9ef7', -- Deck: Unstoppable
        'e0511f', -- Deck: Sisterly Love
        '61f667', -- Deck: The Killing Jar
        '78b13b', -- Deck: No More Noise
        '198e2f', -- Deck: The Guns of Gibraltar
        '3a6161', -- Deck: Onward To Victory
        'fa6330', -- Deck: When The Tide Is High
    }
    for _,faction in pairs(Factions) do
        table.insert(guidsToFreeze, faction.InfiniteBagGuids.BidChip)
        table.insert(guidsToFreeze, faction.InfiniteBagGuids.FactionReferenceSheet)
    end
    for _,guid in ipairs(VictoryPoints.InfiniteBagGuids) do
        table.insert(guidsToFreeze, guid)
    end
    for _,mission in pairs(MissionInfiniteBags) do
        for _,guid in pairs(mission) do
            table.insert(guidsToFreeze, guid)
        end
    end

    return guidsToFreeze
end

--[[
This is also called with the value "Grey" when a player disconnects or when they
click "Change Color" (because it instantly changes them to Grey).

https://api.tabletopsimulator.com/event/#onplayerchangecolor
]]
function onPlayerChangeColor(newPlayerColor)
    if ColorNameToFaction[newPlayerColor] == nil then
        -- Exit early if color doesn't correspond to a faction.
        -- This could happen if a player adds a new HandZone, changes the color of a HandZone, or is Grey.
        return
    end

    local faction = ColorNameToFaction[newPlayerColor]
    local playerSeat = FactionToSeat[faction]
    playerSeat:setupEverything(faction)
end
